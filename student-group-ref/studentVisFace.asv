function studentVisFace(dataFinal,labelFinal,grid,pages,showRank)
% data = data(ind,:);
% names = names(ind);
% 输入data结构：性别	组长	排名	专业	总分	积极/沉思	感官/直觉	视觉/言语	顺序/全局   分组序号
% 修正data结构：组长	性别	排名	总分	积极/沉思	感官/直觉	视觉/言语	顺序/全局
% data = data(:,[2,1,3,5:end-1]);
% 绘图LS结构：性别	组长	排名	积极/沉思	感官/直觉	视觉/言语	顺序/全局
LS = dataFinal(:,[1:3,5:end]);
% % numStudsents = size(LS,1);
% % for ii = 1:numStudents
% %     if LS(ii,2) == 1
% %         names{ii} = [names{ii},'*'];
% %     end
% % end
% % glyphplot(X,'glyph','face','obslabels',Model,'grid',[2 3],'page',9);
% 特征选择：排名-脸的大小（越大排名越靠前）；嘴的长度（越大越积极，越小越沉思）；
LS(:,3) = 1 - LS(:,3); % 排名-脸的大小（越大排名越靠前）
LS(:,4) = LS(:,4)*-1; % 积极/沉思-嘴的长度（越大越积极，越小越沉思）；
LS(:,5) = LS(:,5); % 感官/直觉-鼻子长度（约长越直觉，越短越感官）；
LS(:,6) = LS(:,6)*-1; % 视觉/言语-眼睛长度（约长越视觉，越短越言语）；
LS(:,7) = LS(:,7); % 顺序/全局-眼睛间距（约大越全局，越小越顺序）；
LS(:,8:11) = LS(:,4:7); % 多复制4列变量，每个变量附加一个特征
if grid(1) == 1
    position = [2   675   749   122];
else
    position = [2     1   749   796];
end
% 学习风格分别附加4个特征，沉思-嘴型，直觉-眉毛高度，言语-眼睛大小，全局-眼睛高度
features = [1,17,14,7,5,16,10,8,6];
variables = {'排名','积极/沉思','感官/直觉','视觉/言语','顺序/全局',...
    '积极/沉思','感官/直觉','视觉/言语','顺序/全局'};
for ii = 1:pages
    figure
    if showRank ~= 1
        fig = glyphplot(LS(:,4:end),'glyph','face','features',features(2:end),...
            'standardize','matrix','obslabels',labelFinal,'LineWidth',2,...
            'grid',grid,'page',ii,'varlabels',variables(2:end));        
    else
        fig = glyphplot(LS(:,3:end),'glyph','face','features',features,...
            'standardize','column','obslabels',names,'LineWidth',2,...
            'grid',grid,'page',ii,'varlabels',variables);        
    end
    for jj = 1:size(fig,1) % 修改图中女生为红色
        if LS(jj,1) == 0
            fig(jj,1).Color = [0.8500,0.3250,0.0980];
            fig(jj,2).Color = [0.8500,0.3250,0.0980];
        end
        if LS(jj,1) == -1
            fig(jj,1).Color = [1,1,1];
            fig(jj,2).Color = [1,1,1];
        end
    end
    axis off
    f = gcf;
    f.Position = position; 
end
% tiledlayout('flow')
% for ii = 1:length(ind)
%     nexttile
%     v = [22 0; 0 22; -22 0; 0 -22;
%          11 0; 0 11; -11 0; 0 -11;
%         data(ii,2)+11 0; 0 data(ii,3)+11; -(data(ii,4)+11) 0; 0 -(data(ii,5)+11)];
%     f = [1 2 3 4; 5 6 7 8; 9 10 11 12];
%     hold on
%     if data(ii,1) == 1
%         c = 'blue';
%     else
%         c = 'red';
%     end
%     patch('Faces',1:4,'Vertices',v(1:4,:),'FaceColor',[.6,.6,.6],'FaceAlpha',.2);
%     patch('Faces',1:4,'Vertices',v(5:8,:),'FaceColor',[1,1,1],'FaceAlpha',.2);
%     patch('Faces',1:4,'Vertices',v(9:12,:),'FaceColor',c,'FaceAlpha',.3);
% %     plot([22,0,-22,0]',[0,22,0,-22]','LineStyle','--','Color',[0.6,0.6,0.6]);
% %     hold on
% %     plot([11,0,-11,0]',[0,11,0,-11]','LineStyle','--','Color',[0.6,0.6,0.6]);
% %     plot([data(ii,2)+11,0,-(data(ii,4)+11),0],[0,data(ii,3)+11,0,...
% %         -(data(ii,5)+11)]);
%     text(22,0,'积极/沉思','HorizontalAlignment','left');
%     text(0,23,'感官/直觉','HorizontalAlignment','center');
%     text(-22,0,'视觉/言语','HorizontalAlignment','right');
%     text(0,-23,'顺序/全局','HorizontalAlignment','center');
% %     text(0,-26,names{ii},'HorizontalAlignment','center');
%     hold off
%     axis equal
%     axis off
% end

